import argparseimport csvparser = argparse.ArgumentParser(add_help=False)parser.add_argument('files', type=str, nargs=2)parser.add_argument('--in-delimiter=', type=str, dest='in_del')parser.add_argument('--in-quote=', type=str, default='""')args = parser.parse_args()with open(args.files[0], 'r') as f:  # with blocks automatically close when Python is done with them    if args.in_del:        reader = csv.reader(f, delimiter=args.in_del)    else:          dialect = csv.Sniffer().sniff(f.read(1024))  # searchs through the whole file        f.seek(0)  # seeks back to the beginning of the file so we can read from it        reader = csv.reader(f, delimiter=dialect.delimiter)      with open(args.files[1], 'w') as new_f:        writer = csv.writer(new_f, delimiter=',')        for row in reader:            writer.writerow(row)# import argparse# import csv# parser = argparse.ArgumentParser(add_help=False)# parser.add_argument('files', type=str, nargs=2)# parser.add_argument('--in-delimiter=', type=str, dest='in_del')# parser.add_argument('--in-quote=', type=str, default='"', dest='quote')# args = parser.parse_args()# with open(args.files[0], 'r') as f: #     if args.in_del:#         deli = args.in_del#     else:  #         dialect = csv.Sniffer().sniff(f.read(1024))#         f.seek(0)#         deli = dialect.delimiter#     reader = csv.reader(f, delimiter=deli)  #     with open(args.files[1], 'w') as new_f:#         deli = ','#         writer = csv.writer(new_f, delimiter=deli)#         for row in reader:#             new_row = [# 				element.replace(deli, f'"{deli}"')# 				if deli in element else element# 				for element in row# 			]#             print(new_row)#             writer.writerow(row)